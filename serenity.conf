#! /bin/bash
# serenity.conf
# Serenity configuration file

# Serenity performs the following steps in order to guess a good filename:
#   - Global preprocessing,
#   - Tokenization,
#   - Token preprocessing,
#   - Token refining,
#   - Token postprocessing,
#   - Formatting,
#   - Global postprocessing.

# Filter chains
# =============

# Function names must be serenity.conf.chains.*
# Inside the functions, use serenity.pipeline.add to add a filter to the chain.
# The serenity.processing.trace wrapper filter can be used for debugging purposes.
# A filter can be a function or command that takes the data to be filtered
# from stdin and outputs the filtered data to stdout.

serenity.conf.chains.globalPreprocessing() {
  serenity.pipeline.add serenity.processing.trace serenity.filters.urlDecode
  serenity.pipeline.add serenity.processing.trace sed -r            \
    -e "s/\.[^.]+$//"                                               \
    -e "s/^((aaf)|(tpz))-//I"                                       \
    -e "s/[[_]/ /g;s/\]/ /g"                                        \
    -e "s/^((.+\.com)|(.+\.net)|(.+\.org)|(.+\.info))\b(.+\.)/\6/I" \
    -e "s/tbbt/The Big Bang Theory/I"                               \
    -e "s/\bw13\b/warehouse 13/I"                                   \
    -e "s/swtcw/Star Wars The Clone Wars/I"                         \
    -e "s/tsja/The Sarah Jane Adventures/I"                         \
    -e "s/sttas/Star Trek The Animated Series/I"                    \
    -e "s/^TNG/Star Trek The Next Generation /I"                    \
    -e "s/^CK/Chuck/I"                                              \
    -e "s/DS9/Deep Space Nine/I"                                    \
    -e "s/seven days/7 Days/I"                                      \
    -e "s/doctor.who.classic/doctor who/I"                          \
    -e "s/D\.H\.H\./desperate housewives /I"
}

serenity.conf.chains.numbersPreprocessing() {
  serenity.pipeline.add serenity.processing.trace serenity.filters.romanToArabic
  serenity.pipeline.add serenity.processing.trace serenity.filters.lstrip "0"
}

serenity.conf.chains.defaultPostprocessing() {
  # Example of conditional filtering
  # serenity.tokens.get tokenType retreives the value of a token.
  # It is only available when the chain is used during the token pre and post processing steps.
  # Here we capitalize the first letter of each word unless the country of origin is France.
  if ! [[ "$(serenity.tokens.get country)" =~ [Ff][Rr][Aa][Nn][Cc][Ee] ]]; then
    serenity.pipeline.add serenity.processing.trace sed -r          \
      -e "s/\b(.)/\U\1/g;s/(')(.)/\1\l\2/g"
  fi
  serenity.pipeline.add serenity.processing.trace sed -r            \
    -e 's/[/\]/-/g'                                                 \
    -e "s/’/'/g"                                                    \
    -e "s/[ :!?%#$£]/_/g"                                           \
    -e "s/²/2/g;s/³/3/g"
}

# Global preprocessing
# ====================

# Name of the filter chain to use ('' means no processing)
serenity_conf_globalPreprocessing=globalPreprocessing

# Tokenization
# ============

# Well-known token types:
#   - show: show's name (e. g.: Carnivale)
#   - season: season number (e. g.: 2)
#   - episode: episode number (e. g.: 3)
#   - title: episode title number (e. g.: Ingram, TX)
#   - first_episode: first episode number in a range
#   - last_episode: last episode number in a range
#
# If there is multiple episodes, you can prefix the tokens with 1::, 2::, 3::...

# Default token values ('default' for default)
serenity_conf_tokenDefaults=(['default']=''
                             ['season']=1
                             ['episode']=1)

# Carnivale.S02E03-04.Ingram,.TX.avi
serenity.conf.addTokenizer reMatch  '^(.+)[-_. ][Ss]([0-9]+)[Ee]([0-9]+)-([0-9]+)(.*)$'  \
                                    'show' 'season' 'first_episode' 'last_episode' 'title'
# Carnivale.S02E03E04.Ingram,.TX.avi
serenity.conf.addTokenizer reMatch  '^(.+)[-_. ][Ss]([0-9]+)[Ee]([0-9]+)[Ee]([0-9]+)(.*)$'  \
                                    'show' 'season' '1::episode' '2::episode' 'title'

# Carnivale.S02E03.Ingram,.TX.avi
serenity.conf.addTokenizer reMatch  '^(.+)[-_. ][Ss]([0-9]+)[Ee]([0-9]+)(.*)$'  \
                                    'show' 'season' 'episode' 'title'

# Carnivale.02x03.Ingram,.TX.avi
serenity.conf.addTokenizer reMatch  '^(.+)[-_. ]([0-9]+)[Xx]([0-9]+)(.*)$'      \
                                    'show' 'season' 'episode' 'title'

# Carnivale.203.Ingram,.TX.avi (Assume episode number is 2 character long)
serenity.conf.addTokenizer reMatch  '^(.+)[-_. ]([0-9]+)([0-9]{2})(.*)$'        \
                                    'show' 'season' 'episode' 'title'

# Carnivale Sez 2 ep03.avi
serenity.conf.addTokenizer reMatch  '^(.+)[-_. ]([0-9]+)[-_. ]?ep([0-9]+)(.*)$' \
                                    'show' 'season' 'episode' 'title'

# Token preprocessing
# ===================
serenity_conf_tokenPreprocessing=(['default']=''
                                  ['season']='numbersPreprocessing'
                                  ['episode']='numbersPreprocessing')

# Token refining
# ==============
serenity_conf_refiningBackends=('csv' 'tvrage' 'dummy')

# Token postprocessing
# ====================
serenity_conf_tokenPostprocessing=(['default']='defaultPostprocessing')

# Formatting
# ==========

# Carnivale_02x03_Ingram,_TX.avi
serenity_conf_formatting=(mprintf -f "%s_%02dx%02d-%02d_%s"           'common::show' 'common::season' 'first_episode' 'last_episode' 'common::title'
                                  -f "%s_%02dx%02d_%s_%02dx%02d_%s"   'common::show' '1::season' '1::episode' '1::title' '2::season' '2::episode' '2::title'
                                  -f "%s_%02dx%02d_%s"                'show' 'season' 'episode' 'title'
                                  -f "%s_%02dx%02d"                   'show' 'season' 'episode')

# Global postprocessing
# =====================
serenity_conf_globalPostprocessing=''

# Misc
# ====
# serenity_conf_verbosity: minimal verbosity level. Valid verbosity level are:
#   - $serenity_debug_quiet: show nothing,
#   - $serenity_debug_critical: show only critical errors,
#   - $serenity_debug_error: show all errors,
#   - $serenity_debug_warning: show warnings and errors,
#   - $serenity_debug_info: show information, warnings and errors,
#   - $serenity_debug_debug: show debugging messages too.
serenity_conf_verbosity=$serenity_debug_debug

# serenity_conf_tracing: enable tracing (yes/no)
# Tracing is used only for debugging purposes and can slow down the program.
serenity_conf_tracing='no'

# serenity_conf_keepExtension: keeping file extensions (yes/no)
serenity_conf_keepExtension='yes'

# serenity_conf_multipartStripList: regular expressions that will be stripped from the end of the
# title to get the common episode title of a multipart episode.
serenity_conf_multipartStripList=("(_+)$" "(\s+)$" "(,)$" "([Pp][Aa][Rr][Tt])$" "(/)$"
                                  "([0-9]+)$" "\b($serenity_filters_romanNumeralRE+)$"
                                  "(\([0-9]+\))$" "(\($serenity_filters_romanNumeralRE+\))$"
                                  "(\([0-9]+/[0-9]+\))$")

# Refining backend specific configuration
# =======================================

# CSV backend
# -----------
# The CSV backend is used to override the result of other backends.
# It is useful when a specific show can not be found online.
# Titles are put in a CSV file.

serenity_conf_backend_csv_file='serenity.csv'
serenity_conf_backend_csv_separator=';'
serenity_conf_backend_csv_format=('show' 'season' 'episode' 'title')
